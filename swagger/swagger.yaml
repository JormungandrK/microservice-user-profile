consumes:
- application/json
- application/xml
- application/gob
- application/x-gob
definitions:
  UserProfilePayload:
    description: UserProfile data
    example:
      company: Enim et saepe voluptate.
      companyRegistrationNumber: Nulla iste aliquam.
      email: hermann@waelchi.biz
      fullName: Molestias sint.
      taxNumber: Dolore sit.
    properties:
      company:
        description: Company name
        example: Enim et saepe voluptate.
        type: string
      companyRegistrationNumber:
        description: Company registration number
        example: Nulla iste aliquam.
        type: string
      email:
        description: Email of user
        example: hermann@waelchi.biz
        format: email
        type: string
      fullName:
        description: Full name of the user
        example: Molestias sint.
        type: string
      taxNumber:
        description: Tax number
        example: Dolore sit.
        type: string
    required:
    - fullName
    - email
    title: UserProfilePayload
    type: object
  error:
    description: Error response media type (default view)
    example:
      code: invalid_value
      detail: Value of ID must be an integer
      id: 3F1FKVRR
      meta:
        timestamp: 1458609066
      status: "400"
    properties:
      code:
        description: an application-specific error code, expressed as a string value.
        example: invalid_value
        type: string
      detail:
        description: a human-readable explanation specific to this occurrence of the
          problem.
        example: Value of ID must be an integer
        type: string
      id:
        description: a unique identifier for this particular occurrence of the problem.
        example: 3F1FKVRR
        type: string
      meta:
        additionalProperties: true
        description: a meta object containing non-standard meta-information about
          the error.
        example:
          timestamp: 1458609066
        type: object
      status:
        description: the HTTP status code applicable to this problem, expressed as
          a string value.
        example: "400"
        type: string
    title: 'Mediatype identifier: application/vnd.goa.error; view=default'
    type: object
  userProfile:
    description: userProfile media type (default view)
    example:
      company: Reprehenderit enim doloribus molestiae.
      companyRegistrationNumber: Dolorem illum aut.
      createdOn: 7249765961036167632
      email: fatima@stracke.name
      fullName: Velit assumenda.
      taxNumber: Rerum in ipsam odio beatae possimus harum.
      userId: Vel repudiandae omnis iste possimus possimus.
    properties:
      company:
        description: Company name
        example: Reprehenderit enim doloribus molestiae.
        type: string
      companyRegistrationNumber:
        description: Company registration number
        example: Dolorem illum aut.
        type: string
      createdOn:
        description: User profile created timestamp
        example: 7249765961036167632
        format: int64
        type: integer
      email:
        description: Email of user
        example: fatima@stracke.name
        format: email
        type: string
      fullName:
        description: Full name of the user
        example: Velit assumenda.
        type: string
      taxNumber:
        description: Tax number
        example: Rerum in ipsam odio beatae possimus harum.
        type: string
      userId:
        description: Unique user ID
        example: Vel repudiandae omnis iste possimus possimus.
        type: string
    required:
    - userId
    - createdOn
    title: 'Mediatype identifier: application/microkubes.user-profile+json; view=default'
    type: object
host: localhost:8082
info:
  description: API for managing UserProfile data.
  title: User Profile Microservice
  version: "1.0"
paths:
  /profiles/{userId}:
    get:
      description: Get a UserProfile by UserID
      operationId: userProfile#GetUserProfile
      parameters:
      - description: The user ID
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/microkubes.user-profile+json
      - application/vnd.goa.error
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userProfile'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - http
      summary: GetUserProfile userProfile
      tags:
      - userProfile
    put:
      description: Update user profile
      operationId: userProfile#UpdateUserProfile
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      - description: UserProfile data
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UserProfilePayload'
      produces:
      - application/microkubes.user-profile+json
      - application/vnd.goa.error
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userProfile'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - http
      summary: UpdateUserProfile userProfile
      tags:
      - userProfile
  /profiles/me:
    get:
      description: Get a UserProfile by UserID
      operationId: userProfile#GetMyProfile
      produces:
      - application/microkubes.user-profile+json
      - application/vnd.goa.error
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userProfile'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - http
      summary: GetMyProfile userProfile
      tags:
      - userProfile
    put:
      description: Update my profile
      operationId: userProfile#UpdateMyProfile
      parameters:
      - description: UserProfile data
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UserProfilePayload'
      produces:
      - application/microkubes.user-profile+json
      - application/vnd.goa.error
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userProfile'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error'
      schemes:
      - http
      summary: UpdateMyProfile userProfile
      tags:
      - userProfile
  /swagger-ui/{filepath}:
    get:
      operationId: swagger#/swagger-ui/*filepath
      parameters:
      - description: Relative file path
        in: path
        name: filepath
        required: true
        type: string
      responses:
        "200":
          description: File downloaded
          schema:
            type: file
        "404":
          description: File not found
          schema:
            $ref: '#/definitions/error'
      schemes:
      - http
      summary: Download swagger-ui/dist
  /swagger.json:
    get:
      operationId: swagger#/swagger.json
      responses:
        "200":
          description: File downloaded
          schema:
            type: file
      schemes:
      - http
      summary: Download swagger/swagger.json
produces:
- application/json
- application/xml
- application/gob
- application/x-gob
responses:
  OK:
    description: OK
    schema:
      $ref: '#/definitions/userProfile'
schemes:
- http
swagger: "2.0"
